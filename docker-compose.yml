version: '3.4'

services:
  config-server:
    image: maven:3.8.4-openjdk-17-slim
    restart: always
    environment:
      TZ: America/Sao_Paulo
    ports:
      - 8889
    working_dir: /server
    command: sh -c "cd /server && mvn clean && mvn spring-boot:run"
    user: root
    volumes:
      - ./config-server:/server
    networks:
      - geek-theories-network

  discovery-server:
    image: maven:3.8.4-openjdk-17-slim
    restart: always
    environment:
      TZ: America/Sao_Paulo
    ports:
      - 8761:8761
    working_dir: /server
    command: sh -c "cd /server && mvn clean && mvn spring-boot:run"
    user: root
    volumes:
      - ./discovery-server:/server
    networks:
      - geek-theories-network

  gateway-service:
    image: maven:3.8.4-openjdk-17-slim
    restart: always
    environment:
      TZ: America/Sao_Paulo
    ports:
      - 8765:8765
    working_dir: /server
    command: sh -c "cd /server && mvn clean && mvn spring-boot:run"
    user: root
    volumes:
      - ./gateway-server:/server
    networks:
      - geek-theories-network

  posts-db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      TZ: America/Sao_Paulo
      MYSQL_ROOT_PASSWORD: senhaForte123
      MYSQL_USER: docker
      MYSQL_PASSWORD: senhaForte123
      MYSQL_DATABASE: posts_service
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3306
    ports:
      - 3306
    networks:
      - geek-theories-network

  posts-service:
    image: maven:3.8.4-openjdk-17-slim
    restart: always
    environment:
      TZ: America/Sao_Paulo
    ports:
      - 8000
    volumes:
      - ./posts-service:/app
    working_dir: /app
    command: sh -c "cd /app && mvn clean && mvn spring-boot:run"
    depends_on:
      - posts-db
      - config-server
      - discovery-server
    user: root
    networks:
      - geek-theories-network

networks:
  geek-theories-network:
    driver: bridge
